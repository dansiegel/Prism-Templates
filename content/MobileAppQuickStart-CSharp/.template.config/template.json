{
  "$schema": "http://json.schemastore.org/template",
  "author": "Dan Siegel",
  "classifications": ["Xamarin", "Prism"],
  "name": "Prism Forms Mobile App - Quickstart",
  "groupIdentity": "PrismLibrary.Xamarin.Forms.Quickstart",
  "identity": "PrismLibrary.Xamarin.Forms.QuickStart.CSharp",
  "shortName": "prismforms",
  "thirdPartyNotices": "https://github.com/dansiegel/Prism-Templates/blob/master/template-3pn",
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "sourceName": "Company.MobileApp",
  "preferNameDirectory": true,
  "guids": [
    "00000000-0000-0000-0000-000000000000", // iOS Project Id
    "11111111-1111-1111-1111-111111111111", // Android Project Id
    "22222222-2222-2222-2222-222222222222", // UI Test Project Id
    "33333333-3333-3333-3333-333333333333", // PCL Project Id
    "44444444-4444-4444-4444-444444444444", // Src Folder 
    "55555555-5555-5555-5555-555555555555"  // Tests Folder
  ],
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(!IncludeSolutionFile)",
          "exclude": [
            "*.sln"
          ]
        },
        {
          "condition": "(!IncludeiOS)",
          "exclude": [
            "src/Company.MobileApp.iOS/**",
            "build/BuildTemplateInfo.plist"
          ]
        },
        {
          "condition": "(!IncludeAndroid)",
          "exclude": [
            "src/Company.MobileApp.Droid/**",
            "build/AndroidTemplateManifest.xml"
          ]
        },
        {
          "condition": "(!UWPSupported)",
          "exclude": [
            "src/Company.MobileApp.UWP/**"
          ]
        },
        {
          "condition": "(!IncludeUITest)",
          "exclude": [
            "tests/Company.MobileApp.UITests/**"
          ]
        },
        {
          "condition": "(!Localization)",
          "exclude": [
            "src/Company.MobileApp/i18n/**",
            "src/Company.MobileApp/Strings/**"
          ]
        },
        {
          "rename": {
            "git.ignore": ".gitignore"
          }
        },
        {
          "condition": "(DataProvider != \"AzureMobileClient\")",
          "exclude": [
            "src/Company.MobileApp/Auth/**",
            "src/Company.MobileApp/Data/**"
          ]
        },
        {
          "condition": "(DataProvider == \"AzureMobileClient\" && AuthenticationSource == \"None\")",
          "exclude": [
            "src/Company.MobileApp/Auth/**"
          ]
        },
        {
          "condition": "(DataProvider == \"AzureMobileClient\" && AuthenticationSource != \"AAD\" && AuthenticationSource != \"AADB2C\")",
          "exclude": [
            "src/Company.MobileApp/Auth/AADOptions.cs"
          ]
        },
        {
          "condition": "(!UseAppCenter)",
          "exclude": [
            "src/Company.MobileApp/Services/MCAnalyticsLogger.cs"
          ]
        },
        {
          "condition": "(Empty)",
          "exclude": [
            "src/Company.MobileApp/ViewModels/MainPageViewModel.cs",
            "src/Company.MobileApp/ViewModels/TodoItemDetailViewModel.cs",
            "src/Company.MobileApp.ViewModels/SplashScreenPageViewModel.cs",
            "src/Company.MobileApp/Views/MainPage.xaml",
            "src/Company.MobileApp/Views/SplashScreenPage.*",
            "src/Company.MobileApp/Views/TodoItemDetail.*",
            "src/Company.MobileApp/Models/**"
          ],
          "rename": {
            "AltMainPageViewModel.cs": "MainPageViewModel.cs",
            "AltMainPage.xaml": "MainPage.xaml"
          }
        },
        {
          "condition": "(!Empty)",
          "exclude": [
            "**/AltMainPage.xaml",
            "**/AltMainPageViewModel.cs"
          ]
        }
      ]
    }
  ],
  "symbols":{
    "IncludeSolutionFile": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "AppId": {
      "type": "parameter",
      "dataType": "text",
      "replaces": "com.prismtemplate.name",
      "isRequired": "true",
      "description": "Sets the iOS Bundle Id and the Android package Id <com.company.appname>"
    },
    "IncludeiOS": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "true",
      "description": "Determines whether to include the iOS project"
    },
    "IncludeAndroid": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "true",
      "description": "Determines whether to include the Android project"
    },
    "IncludeUWP": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "false",
      "description": "Determines whether to include the UWP project"
    },
    "IncludeUITest": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "true",
      "description": "Determines whether to include a UI Test project"
    },
    "Localization": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "true",
      "description": "Includes resources to localize apps"
    },
    "UseMvvmHelpers": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "true",
      "description": "Includes the Mvvm Helpers from James Montemagno"
    },
    "UseAcrDialogs": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "false",
      "description": "Adds Acr.UserDialogs to the Solution"
    },
    "UseAppCenter": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "false",
      "description": "Will setup App Center for Crashes and Analytics"
    },
    "AppCenter-iOS": {
      "type": "parameter",
      "dataType": "text",
      "replaces": "APPCENTER-IOS-SECRET",
      "defaultValue": "",
      "description": "Application Secret from App Center for iOS"
    },
    "AppCenter-Android": {
      "type": "parameter",
      "dataType": "text",
      "replaces": "APPCENTER-ANDROID-SECRET",
      "defaultValue": "",
      "description": "Application Secret from App Center for Android"
    },
    "AppCenter-UWP": {
      "type": "parameter",
      "datatype":"text",
      "replaces": "APPCENTER-UWP-SECRET",
      "defaultValue": "",
      "description": "Application Secret from App Center for UWP"
    },
    "MinimumAndroidTarget": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "21",
      "choices": [
        {
          "choice": "17",
          "description": "Targets Android Jelly Bean 4.2.X"
        },
        {
          "choice": "18",
          "description": "Targets Android Jelly Bean 4.3"
        },
        {
          "choice": "19",
          "description": "Targets Android Kit Kat 4.4"
        },
        {
          "choice": "21",
          "description": "Targets Android Lollipop 5.0"
        },
        {
          "choice": "22",
          "description": "Targets Android Lollipop 5.1"
        },
        {
          "choice": "23",
          "description": "Targets Android Marshmallow 6.0"
        }
      ],
      "replaces": "ANDROID-MINIMUM-TARGET-SDK"
    },
    "Container": {
      "type": "parameter",
      "dataType": "choice",
      "defaultValue": "DryIoc",
      "choices": [
        {
          "choice": "Autofac",
          "description": "Uses Autofac as the Dependency Injection Container"
        },
        {
          "choice": "DryIoc",
          "description": "Uses DryIoc as the Dependency Injection Container"
        },
        {
          "choice": "Unity",
          "description": "Uses Unity as the Dependency Injection Container"
        }
      ],
      "description": "The Dependency Injection Container to use"
    },
    "DataProvider": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "None",
      "choices": [
        {
          "choice": "None",
          "description": "No data provider"
        },
        {
          "choice": "AzureMobileClient",
          "description": "Uses the Azure Mobile Client"
        },
        {
          "choice": "Realm",
          "description": "Uses a Realm Object Server"
        }
      ]
    },
    "AuthenticationSource": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "None",
      "choices": [
        {
          "choice": "None",
          "description": "Uses anonymous authentication"
        },
        {
          "choice": "AAD",
          "description": "Uses Azure Active Directory"
        },
        {
          "choice": "AADB2C",
          "description": "Uses Azure Active Directory B2C"
        },
        {
          "choice": "Custom",
          "description": "Use a custom Authentication Source"
        // },
        // {
        //   "choice": "Google",
        //   "description": "Use Google"
        // },
        // {
        //   "choice": "Facebook",
        //   "description": "Use Facebook"
        // },
        // {
        //   "choice": "MicrosoftAccount",
        //   "description": "Use Microsoft Accounts"
        }
      ]
    },
    "AuthenticationClientId": {
      "type": "parameter",
      "datatype": "text",
      "defaultValue": "",
      "description": "Client ID for an Authentication source such as Azure Active Directory",
      "replaces": "AUTHENTICATION_CLIENT_ID"
    },
    "PolicySignUpSignIn": {
      "type": "parameter",
      "datatype": "text",
      "defaultValue": "b2c_1_susi",
      "description": "AAD B2C SignUpSignIn Policy",
      "replaces": "PolicySignUpSignInName"
    },
    "PolicyEditProfile": {
      "type": "parameter",
      "datatype": "text",
      "defaultValue": "b2c_1_edit_profile",
      "description": "AAD B2c Edit Profile Policy",
      "replaces": "PolicyEditProfileName"
    },
    "PolicyResetPassword": {
      "type": "parameter",
      "datatype": "text",
      "defaultValue": "b2c_1_reset",
      "description": "AAD B2C Reset Password Policy",
      "replaces": "PolicyResetPasswordName"
    },
    "IncludeBarcodeService": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Includes the Barcode Service plugin"
    },
    "HasAuthClientId": {
      "type": "computed",
      "value": "(AuthenticationClientId != \"\")"
    },
    "UseRealm": {
      "type": "computed",
      "value": "(DataProvider == \"Realm\")"
    },
    "UseAzureMobileClient": {
      "type": "computed",
      "value": "(DataProvider == \"AzureMobileClient\")"
    },
    "UsesAuthentication": {
      "type": "computed",
      "value": "(AuthenticationSource != \"None\")"
    },
    "AutofacContainer": {
      "type": "computed",
      "value": "(Container == \"Autofac\")"
    },
    "DryIocContainer": {
      "type": "computed",
      "value": "(Container == \"DryIoc\")"
    },
    "UnityContainer": {
      "type": "computed",
      "value": "(Container == \"Unity\")"
    },
    "AutofacAzureMobileClient": {
      "type": "computed",
      "value": "(DataProvider == \"AzureMobileClient\" && Container == \"Autofac\")"
    },
    "DryIocAzureMobileClient": {
      "type": "computed",
      "value": "(DataProvider == \"AzureMobileClient\" && Container == \"DryIoc\")"
    },
    "UnityAzureMobileClient": {
      "type": "computed",
      "value": "(DataProvider == \"AzureMobileClient\" && Container == \"Unity\")"
    },
    "NoAuth": {
      "type": "computed",
      "value": "(AuthenticationSource ==\"None\")"
    },
    "AADAuth": {
      "type": "computed",
      "value": "(AuthenticationSource ==\"AAD\")"
    },
    "AADB2CAuth": {
      "type": "computed",
      "value": "(AuthenticationSource ==\"AADB2C\")"
    },
    "CustomAuth": {
      "type": "computed",
      "value": "(AuthenticationSource ==\"Custom\")"
    },
    "GoogleAuth": {
      "type": "computed",
      "value": "(AuthenticationSource ==\"Google\")"
    },
    "FacebookAuth": {
      "type": "computed",
      "value": "(AuthenticationSource ==\"Facebook\")"
    },
    "MicrosoftAuth": {
      "type": "computed",
      "value": "(AuthenticationSource ==\"MicrosoftAccount\")"
    },
    "UWPSupported": {
      "type":"computed",
      "value": "(IncludeUWP)"
    },
    "GitInitialize": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "false"
    },
    "Empty": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "If true the sample pages will be excluded"
    },
    "skipRestore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Skips the package restore if specified",
      "defaultValue": "false"
    }
  },
  "primaryOutputs": [ 
        {
          "path": "ReadMe.md" 
        },
        {
          "path": "GettingStarted.txt" 
        },
        {
          "path": "src/Company.MobileApp/Company.MobileApp.csproj" 
        },
        {
          "condition": "(IncludeAndroid)",
          "path": "src/Company.MobileApp.Droid/Company.MobileApp.Droid.csproj"
        },
        {
          "condition": "(IncludeAndroid)",
          "path": "build/AndroidTemplateManifest.xml"
        },
        {
          "condition": "(IncludeiOS)",
          "path": "src/Company.MobileApp.iOS/Company.MobileApp.iOS.csproj" 
        },
        {
          "condition": "(IncludeiOS)",
          "path": "build/BuildTemplateInfo.plist" 
        },
        {
          "condition": "(IncludeUWP)",
          "path": "src/Company.MobileApp.UWP/Company.MobileApp.UWP.csproj" 
        },
        {
          "condition": "(IncludeUITest)",
          "path": "tests/Company.MobileApp.UITests/Company.MobileApp.UITests.csproj" 
        }
  ],
  "SpecialCustomOperations": {
    "**/packages.config": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "actionableIf": [ "<!--#if" ],
            "actionableElse": [ "#else", "<!--#else" ],
            "actionableElseif": [ "#elseif", "<!--#elseif" ],
            "endif": [ "#endif", "<!--#endif" ],
            "trim" : "true",
            "wholeLine": "true"
          }
        }
      ]
    },
    "**/*.ps1": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "actionableIf": [ "#if", "//if" ],
            "actionableElse": [ "#else", "//else" ],
            "actionableElseif": [ "#elseif", "//elseif" ],
            "endif": [ "#endif" ],
            "trim": "true",
            "wholeLine": "true"
          }
        }
      ]
    },
    "**/*.txt": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "actionableIf": [ "#if", "//if" ],
            "actionableElse": [ "#else", "//else" ],
            "actionableElseif": [ "#elseif", "//elseif" ],
            "endif": [ "#endif" ],
            "trim": "true",
            "wholeLine": "true"
          }
        }
      ]
    }
  },
  "defaultName": "PrismApp",
  "postActions": [
    // {
    //   "condition": "(AllowScripts)",
    //   "description": "Run 'git init'",
    //   "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
    //   "manualInstructions": [
    //     { "text": "Run 'git init'" }
    //   ],
    //   "args": {
    //     "executable": "git",
    //     "args": "init"
    //   }
    // }
    // {
    //   "condition": "(AllowScripts == \"yes\")",
    //   "description": "Run 'git add *'",
    //   "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
    //   "manualInstructions": [
    //     { "text": "Run 'git add *'" }
    //   ],
    //   "args": {
    //     "executable": "git",
    //     "args": "add *"
    //   }
    // },
    // {
    //   "condition": "(AllowScripts == \"yes\")",
    //   "description": "Run 'git commit'",
    //   "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
    //   "manualInstructions": [
    //     { "text": "Run 'git commit -m \"Initial Commit\"'" }
    //   ],
    //   "args": {
    //     "executable": "git",
    //     "args": "commit -m \"Initial Commit\""
    //   }
  ]
}